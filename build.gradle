plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.4'
}

group = project.findProperty('pluginGroup')
version = '1.0.2'
archivesBaseName = 'odoo-autocompletion-support'

repositories {
    mavenCentral()
}

intellij {
    type = 'PC' // PyCharm Community
    version = project.findProperty('platformVersion')
    plugins = ['python-ce']
    downloadSources = true
}

patchPluginXml {
    sinceBuild = project.findProperty('pluginSinceBuild')
    untilBuild = null
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

// Отключаю тесты
tasks.withType(Test) {
    enabled = false
}

tasks.wrapper {
    gradleVersion = project.findProperty('gradleVersion')
}

tasks.register('patchInstrumentedPluginXmlAndResealDist') {
    doLast {
        def jarFile = file("$buildDir/libs/instrumented-odoo-autocompletion-support-1.0.2.jar")
        if (!jarFile.exists()) return
        def tmpDir = file("$buildDir/tmp/instrumentedPluginXmlFix")
        tmpDir.deleteDir(); tmpDir.mkdirs()
        copy {
            from zipTree(jarFile)
            into tmpDir
        }
        def pluginXml = new File(tmpDir, "META-INF/plugin.xml")
        if (pluginXml.exists()) {
            def text = pluginXml.text.replaceAll(/ until-build="[^"]*"/, "")
            pluginXml.text = text
        }
        ant.zip(destfile: jarFile, basedir: tmpDir)

        // Пересобираем distribution-zip
        def distDir = file("$buildDir/distributions")
        def zipFile = distDir.listFiles()?.find { it.name.endsWith('.zip') }
        if (!zipFile) return
        def distTmp = file("$buildDir/tmp/distZipFix")
        distTmp.deleteDir(); distTmp.mkdirs()
        copy {
            from zipTree(zipFile)
            into distTmp
        }
        def instrJarInZip = new File(distTmp, "odoo_plugin/lib/instrumented-odoo-autocompletion-support-1.0.2.jar")
        if (instrJarInZip.exists()) {
            instrJarInZip.delete()
            instrJarInZip << jarFile.bytes
        }
        ant.zip(destfile: zipFile, basedir: distTmp)
    }
}
tasks.build.finalizedBy('patchInstrumentedPluginXmlAndResealDist')
